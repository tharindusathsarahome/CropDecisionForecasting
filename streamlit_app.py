import streamlit as st
from google import generativeai as genai
from PIL import Image
import io
import time

# --- Streamlit ‡∂¥‡∑í‡∂ß‡∑î ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏ ---
st.set_page_config(
    page_title="Plant Disease Analyzer",
    page_icon="üå±",
    layout="centered"
)

# --- API ‡∂∫‡∂≠‡∑î‡∂ª ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏ ---
try:
    api_key = st.secrets['GEMINI_API_KEY']
    genai.configure(api_key=api_key)
except (KeyError, Exception):
    st.error("GEMINI_API_KEY ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ë‡∂∫ ‡∂î‡∂∂‡∂ú‡∑ö Streamlit ‡∂ª‡∑Ñ‡∑É‡∑ä ‡∑Ä‡∑ô‡∂≠ ‡∂ë‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
    st.stop()

# --- AI ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É‡∑ä ---

# 1. ‡∑Å‡∑è‡∂ö ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ä‡∂± ‡∑É‡∂ª‡∂Ω ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É
IDENTIFICATION_INSTRUCTION = """
‡∂î‡∂∂‡∑ö ‡∂ë‡∂ö‡∂∏ ‡∂ö‡∑è‡∂ª‡∑ä‡∂∫‡∂∫ ‡∑Ä‡∂±‡∑ä‡∂±‡∑ö ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì ‡∂á‡∂≠‡∑í ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∑ö ‡∂á‡∂≠‡∑í ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω‡∑ô‡∂±‡∑ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂∫‡∑í. 
‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂Ω‡∑ô‡∑É ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂±‡∑ú‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É: '‡∂ª‡∑ù‡∑É' ‡∑Ñ‡∑ù '‡∂≠‡∂ö‡∑ä‡∂ö‡∑è‡∂Ω‡∑í'.
"""

# 2. ‡∑É‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∑Ä‡∂± ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É
ANALYSIS_INSTRUCTION = """
‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∑ê‡∂¥‡∂∫‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑ä‡∂≠‡∑ö ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∂∏‡∂´‡∑í.

‡∂î‡∂∂ ‡∂ã‡∂Ø‡∑ä‡∂∑‡∑í‡∂Ø ‡∑Ä‡∑í‡∂Ø‡∑ä‚Äç‡∂∫‡∑è‡∑Ä ‡∑É‡∑Ñ ‡∑Å‡∑è‡∂ö ‡∂ª‡∑ù‡∂ú ‡∂¥‡∑í‡∑Ö‡∑í‡∂∂‡∂≥ ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç‡∂•‡∂∫‡∑ô‡∂ö‡∑í. ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ö‡∑è‡∂ª‡∑ä‡∂∫‡∂∫ ‡∑Ä‡∂±‡∑ä‡∂±‡∑ö ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø ‡∑Å‡∑è‡∂ö ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥ ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª ‡∂î‡∑Ä‡∑î‡∂±‡∑ä‡∂ú‡∑ö ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∑Ä‡∂Ω‡∂ß ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ì‡∂∏‡∂∫‡∑í.

‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∂∏‡∑î‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∑É‡∑Ñ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂ë‡∑Ä‡∂± ‡∑Ä‡∑í‡∂ß, ‡∂∏‡∑ô‡∂∏ ‡∂∏‡∑è‡∂ª‡∑ä‡∂ú‡∑ù‡∂¥‡∂Ø‡∑ö‡∑Å‡∂∫ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä ‡∂ë‡∂∫ ‡∑Ñ‡∑ú‡∂≥‡∑í‡∂±‡∑ä ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±:
1.  *‡∂¥‡∑ô‡∂±‡∑ô‡∂± ‡∑Å‡∑è‡∂ö ‡∂ö‡∑ú‡∂ß‡∑É‡∑ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂±‡∑ä‡∂±*: ‡∂ö‡∑ú‡∑Ö, ‡∂∏‡∂Ω‡∑ä, ‡∂ö‡∂≥‡∂±‡∑ä, ‡∂¥‡∑É ‡∂Ü‡∂Ø‡∑í‡∂∫ ‡∑É‡∂ß‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±.
2.  *‡∑Å‡∑è‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç‡∂∫ ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±*: ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∂∏‡∂≠ ‡∂¥‡∂Ø‡∂±‡∂∏‡∑ä‡∑Ä ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
3.  *‡∑Å‡∑è‡∂ö ‡∑É‡∑û‡∂õ‡∑ä‚Äç‡∂∫‡∂∫ ‡∂≠‡∂ö‡∑ä‡∑É‡∑ö‡∂ª‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±*: ‡∂ª‡∑ù‡∂ú, ‡∂¥‡∑Ö‡∑í‡∂∂‡∑ù‡∂∞‡∂ö‡∂∫‡∂±‡∑ä ‡∑Ñ‡∑ù ‡∂¥‡∑ì‡∂©‡∂±‡∂ö‡∑è‡∂ª‡∑ì ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫‡∂±‡∑ä‡∂ú‡∑ö ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´ ‡∑É‡∑ú‡∂∫‡∂±‡∑ä‡∂± (‡∑Ä‡∂ª‡∑ä‡∂´‡∂∫ ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä‡∑Ä‡∑ì‡∂∏, ‡∂Ω‡∂¥, ‡∑É‡∑í‡∂Ø‡∑î‡∂ª‡∑î, ‡∂ö‡∑ú‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂Ω‡∑ì‡∂∏, ‡∂∏‡∑ê‡∂Ω‡∑Ä‡∑ì‡∂∏, ‡∂ö‡∑ò‡∂∏‡∑ì‡∂±‡∑ä, ‡∂Ø‡∑ê‡∂Ω‡∑ä).
4.  *‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª‡∂∫ ‡∑É‡∂ö‡∑É‡∂±‡∑ä‡∂±*: ‡∂î‡∂∂‡∂ú‡∑ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂∏‡∂≠ ‡∂¥‡∂Ø‡∂±‡∂∏‡∑ä‡∑Ä, ‡∑É‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑è‡∂ª‡∑ä‡∂≠‡∑è‡∑Ä‡∂ö‡∑ä ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.
    *   *‡∑É‡∂∏‡∑É‡∑ä‡∂≠ ‡∑É‡∑û‡∂õ‡∑ä‚Äç‡∂∫ ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫*: (‡∂ã‡∂Ø‡∑è: ‡∑É‡∑û‡∂õ‡∑ä‚Äç‡∂∫ ‡∑É‡∂∏‡∑ä‡∂¥‡∂±‡∑ä‡∂±, ‡∂¥‡∑ì‡∂©‡∂±‡∂∫‡∂ß ‡∂Ω‡∂ö‡∑ä‡∑Ä‡∑ñ, ‡∂ª‡∑ù‡∂ú‡∑ì).
    *   *‡∂±‡∑í‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∂´‡∂∫ ‡∂ö‡∑Ö ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´*: ‡∂î‡∂∂ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠‡∑ä ‡∂±‡∑í‡∑Å‡∑ä‡∂†‡∑í‡∂≠ ‡∑É‡∂Ω‡∂ö‡∑î‡∂´‡∑î ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    *   *‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ñ‡∑ö‡∂≠‡∑î*: (‡∂ã‡∂Ø‡∑è: ‡∂Ø‡∑í‡∂Ω‡∑ì‡∂ª ‡∂Ü‡∑É‡∑è‡∂Ø‡∂±‡∂∫, ‡∂¢‡∂Ω‡∂∫ ‡∑Ä‡∑ê‡∂©‡∑í‡∑Ä‡∑ì‡∂∏, ‡∂¥‡∑ù‡∑Ç‡∂ö ‡∂å‡∂±‡∂≠‡∑è‡∑Ä‡∂∫).
    *   *‡∑É‡∂≠‡∑ä‡∂ö‡∑è‡∂ª ‡∑É‡∑Ñ ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂ö‡∑è‡∂ª ‡∂∫‡∑ù‡∂¢‡∂±‡∑è*: ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í, ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.

‡∂¥‡∑É‡∑î‡∑Ä ‡∂Ö‡∑É‡∂± ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∑É‡∂≥‡∑Ñ‡∑è, ‡∂∏‡∑î‡∂Ω‡∑ä ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∑ö ‡∑É‡∑Ñ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∑ö ‡∑É‡∂±‡∑ä‡∂Ø‡∂ª‡∑ä‡∂∑‡∂∫ ‡∂¥‡∑Ä‡∂≠‡∑ä‡∑Ä‡∑è ‡∂ú‡∂±‡∑ä‡∂±. ‡∑É‡∂Ç‡∂ö‡∑ä‡∑Ç‡∑í‡∂¥‡∑ä‡∂≠, ‡∂¥‡∑ä‚Äç‡∂ª‡∂∫‡∑ù‡∂¢‡∂±‡∑Ä‡∂≠‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.
"""

# --- ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏ ---
analysis_model = genai.GenerativeModel(
    model_name="gemini-1.5-pro-latest",
    system_instruction=ANALYSIS_INSTRUCTION
)
identification_model = genai.GenerativeModel(
    model_name="gemini-1.5-pro-latest",
    system_instruction=IDENTIFICATION_INSTRUCTION
)

# --- ‡∑É‡∑ê‡∑É‡∑í ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫ (Session State) ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
if "chat_session" not in st.session_state:
    st.session_state.chat_session = None
if "messages" not in st.session_state:
    st.session_state.messages = []
if "awaiting_confirmation" not in st.session_state:
    st.session_state.awaiting_confirmation = False
if "plant_name" not in st.session_state:
    st.session_state.plant_name = ""
# ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑í‡∂±‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∂ö‡∑ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂±‡∑Ä state ‡∂ë‡∂ö‡∂ö‡∑ä
if "processed_file_id" not in st.session_state:
    st.session_state.processed_file_id = None

# --- ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∑ì‡∂≠‡∑ä‡∑Ä‡∂∫‡∂±‡∑ä (Functions) ---

def reset_session():
    """‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ ‡∑É‡∑ê‡∑É‡∑í‡∂∫ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∑É‡∂ö‡∑É‡∂∫‡∑í"""
    st.session_state.chat_session = None
    st.session_state.messages = []
    st.session_state.awaiting_confirmation = False
    st.session_state.plant_name = ""
    st.session_state.processed_file_id = None
    # uploader ‡∂ë‡∂ö reset ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è key ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∂±‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫‡∂∫‡∑í,
    # ‡∂±‡∂∏‡∑î‡∂≠‡∑ä ‡∂ë‡∂∫ ‡∂≠‡∂∂‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í‡∑Ä uploader ‡∂ë‡∂ö clear ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫.
    if 'uploader_key' not in st.session_state:
        st.session_state.uploader_key = 0
    st.session_state.uploader_key += 1
    st.rerun()

# --- UI ‡∑É‡∑Ñ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í ---
st.title("üå± Plant Disease Analyzer")
st.write("‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂¥‡∑ê‡∂≠‡∑í ‡∂≠‡∑ì‡∂ª‡∑î‡∑Ä‡∑ô‡∂±‡∑ä (Side Bar) ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")

# --- ‡∂ú‡∑ú‡∂±‡∑î ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∑Ñ ‡∂¥‡∑è‡∂Ω‡∂±‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∑ê‡∂≠‡∑í ‡∂≠‡∑ì‡∂ª‡∑î‡∑Ä ---
with st.sidebar:
    st.header("‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫")
    
    # on_change ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª ‡∂á‡∂≠.
    uploaded_file = st.file_uploader(
        "‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±", 
        type=["jpg", "jpeg", "png"],
        key=f"uploader_{st.session_state.get('uploader_key', 0)}"
    )
    
    if st.button("‡∂±‡∑Ä ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∂ö‡∑ä"):
        reset_session()

# --- ‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫‡∑Ä ‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í‡∂∫ ---
# ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª ‡∂á‡∂≠‡∑ä‡∂±‡∂∏‡∑ä ‡∑É‡∑Ñ ‡∂ë‡∂∫ ‡∂¥‡∑ô‡∂ª ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∑Ö ‡∂ë‡∂ö‡∂∏ ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫ ‡∂±‡∑ú‡∑Ä‡∑ö ‡∂±‡∂∏‡∑ä...
if uploaded_file and uploaded_file.file_id != st.session_state.processed_file_id:
    # ‡∂±‡∑Ä ‡∑É‡∑ê‡∑É‡∑í‡∂∫‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∑ê‡∂ª‡∂´‡∑í ‡∂Ø‡∂≠‡∑ä‡∂≠ ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    st.session_state.messages = []
    st.session_state.chat_session = None
    st.session_state.awaiting_confirmation = True
    st.session_state.processed_file_id = uploaded_file.file_id

    image = Image.open(uploaded_file)

    with st.spinner("‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂±‡∑í‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì..."):
        try:
            response = identification_model.generate_content(["‡∂∏‡∑ô‡∂∏ ‡∑Å‡∑è‡∂ö‡∂∫ ‡∂ö‡∑î‡∂∏‡∂ö‡∑ä‡∂Ø?", image])
            plant_name = response.text.strip()
            st.session_state.plant_name = plant_name
            
            confirmation_question = f"‡∂∏‡∑ô‡∂∫ '{plant_name}' ‡∑Å‡∑è‡∂ö‡∂∫‡∂ö‡∑ä‡∂Ø? (‡∂î‡∑Ä‡∑ä / ‡∂±‡∑ê‡∂≠)"
            st.session_state.messages.append({"role": "assistant", "content": confirmation_question})
            
            # ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä‡∂ö‡∂∏‡∑ä ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∑í‡∂ß‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
            st.rerun()

        except Exception as e:
            st.error(f"‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: {e}")
            reset_session()


# --- ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø ‡∂â‡∂≠‡∑í‡∑Ñ‡∑è‡∑É‡∂∫ ‡∂¥‡∑ô‡∂±‡∑ä‡∑Ä‡∑ì‡∂∏ ---
# ‡∂∫‡∑ô‡∂Ø‡∑î‡∂∏ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∂± ‡∑Ä‡∑í‡∂ß, AI ‡∂á‡∑É‡∑ñ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì ‡∂Ø‡∂ª‡∑ä‡∑Å‡∂±‡∂∫ ‡∑Ä‡∑ö.
if uploaded_file:
    with st.sidebar:
        st.image(uploaded_file, caption="‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫")

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])


# --- ‡∂†‡∑ê‡∂ß‡∑ä ‡∂Ü‡∂Ø‡∑è‡∂± ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í‡∂∫ ---
if prompt := st.chat_input("‡∂î‡∂∂‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±..."):
    if not st.session_state.processed_file_id:
        st.warning("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑Ö‡∂∏‡∑î‡∑Ä ‡∂¥‡∑ê‡∂≠‡∑í ‡∂≠‡∑ì‡∂ª‡∑î‡∑Ä‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
        st.stop()

    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # 1. ‡∑Å‡∑è‡∂ö ‡∂±‡∑è‡∂∏‡∂∫ ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö ‡∂Ö‡∂Ø‡∑í‡∂∫‡∂ª
    if st.session_state.awaiting_confirmation:
        st.session_state.awaiting_confirmation = False
        
        if any(word in prompt.lower() for word in ["‡∂î‡∑Ä‡∑ä", "‡∂î‡∑Ä‡∑î", "ow", "yes"]):
            with st.spinner("‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì..."):
                try:
                    analysis_prompt = f"‡∂∏‡∑ô‡∂∏ '{st.session_state.plant_name}' ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∑É‡∑û‡∂õ‡∑ä‚Äç‡∂∫ ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫ ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª, ‡∂ú‡∑ê‡∂ß‡∂Ω‡∑î ‡∂á‡∂≠‡∑ä‡∂±‡∂∏‡∑ä ‡∂í‡∑Ä‡∑è‡∂ß ‡∑Ä‡∑í‡∑É‡∂≥‡∑î‡∂∏‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±."
                    
                    # ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂ª‡∑ñ‡∂¥‡∂∫ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
                    # uploaded_file ‡∂ë‡∂ö ‡∂≠‡∑Ä‡∂∏‡∂≠‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑í‡∂± ‡∂±‡∑í‡∑É‡∑è, ‡∂ë‡∂∫‡∑í‡∂±‡∑ä image object ‡∂ë‡∂ö ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∑É‡∑ë‡∂Ø‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í‡∂∫‡∑í
                    image_for_analysis = Image.open(uploaded_file)

                    st.session_state.chat_session = analysis_model.start_chat(history=[])
                    response = st.session_state.chat_session.send_message(
                        [analysis_prompt, image_for_analysis],
                        stream=True
                    )
                    
                    with st.chat_message("assistant"):
                        full_response = ""
                        placeholder = st.empty()
                        for chunk in response:
                            full_response += chunk.text
                            placeholder.markdown(full_response + "‚ñå")
                        placeholder.markdown(full_response)
                    
                    st.session_state.messages.append({"role": "assistant", "content": full_response})

                except Exception as e:
                    st.error(f"‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: {e}")
        else:
            rejection_message = "‡∂≠‡∑ö‡∂ª‡∑î‡∂∏‡∑ä ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä, ‡∑Ä‡∂©‡∑è‡∂≠‡∑ä ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±. ‡∂∏‡∑ô‡∂∏ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫ ‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∑Ä‡∑ö."
            st.session_state.messages.append({"role": "assistant", "content": rejection_message})
            with st.chat_message("assistant"):
                st.markdown(rejection_message)
            
            time.sleep(3)
            reset_session()

    # 2. ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø ‡∂Ö‡∂Ø‡∑í‡∂∫‡∂ª (‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î)
    elif st.session_state.chat_session:
        with st.spinner("‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∂ö‡∑É‡∂∏‡∑í‡∂±‡∑ä..."):
            try:
                response = st.session_state.chat_session.send_message(
                    prompt,
                    stream=True
                )
                
                with st.chat_message("assistant"):
                    full_response = ""
                    placeholder = st.empty()
                    for chunk in response:
                        full_response += chunk.text
                        placeholder.markdown(full_response + "‚ñå")
                    placeholder.markdown(full_response)
                
                st.session_state.messages.append({"role": "assistant", "content": full_response})

            except Exception as e:
                st.error(f"‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: {e}")

st.divider()
st.caption("‚ö†Ô∏è ‡∂∏‡∑ô‡∂∏ AI ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∑Ä‡∑ò‡∂≠‡∑ä‡∂≠‡∑ì‡∂∫ ‡∂ö‡∑ò‡∑Ç‡∑í‡∂ö‡∑è‡∂ª‡∑ä‡∂∏‡∑í‡∂ö ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂Ü‡∂Ø‡∑ö‡∑Å‡∂ö‡∂∫‡∂ö‡∑ä ‡∑Ä‡∑ö.")