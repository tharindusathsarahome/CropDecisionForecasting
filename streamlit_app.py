import streamlit as st
from google import generativeai as genai
from PIL import Image
import io
import time
import re

# --- Streamlit ‡∂¥‡∑í‡∂ß‡∑î ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏ ---
st.set_page_config(
    page_title="Plant Disease Analyzer",
    page_icon="üå±",
    layout="centered"
)

# --- API ‡∂∫‡∂≠‡∑î‡∂ª ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏ ---
try:
    api_key = st.secrets['GEMINI_API_KEY']
    genai.configure(api_key=api_key)
except (KeyError, Exception):
    st.error("GEMINI_API_KEY ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ë‡∂∫ ‡∂î‡∂∂‡∂ú‡∑ö Streamlit ‡∂ª‡∑Ñ‡∑É‡∑ä ‡∑Ä‡∑ô‡∂≠ ‡∂ë‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
    st.stop()

# --- AI ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É‡∑ä ---
IDENTIFICATION_INSTRUCTION = """
‡∂î‡∂∂‡∑ö ‡∂ë‡∂ö‡∂∏ ‡∂ö‡∑è‡∂ª‡∑ä‡∂∫‡∂∫ ‡∑Ä‡∂±‡∑ä‡∂±‡∑ö ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì ‡∂á‡∂≠‡∑í ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∑ö ‡∂á‡∂≠‡∑í ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω‡∑ô‡∂±‡∑ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂∫‡∑í. 
‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂Ω‡∑ô‡∑É ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∂ö‡∑ä ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂±‡∑ú‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
‡∂ã‡∂Ø‡∑è‡∑Ñ‡∂ª‡∂´‡∂∫‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É: '‡∂ª‡∑ù‡∑É' ‡∑Ñ‡∑ù '‡∂≠‡∂ö‡∑ä‡∂ö‡∑è‡∂Ω‡∑í'. ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂±‡∂∏‡∑ä, "‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö" ‡∂Ω‡∑ô‡∑É ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
"""

# ‡∂±‡∑Ä ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 1: ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∑É‡∑Ñ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂¢‡∂±‡∂±‡∂∫
PRELIMINARY_ANALYSIS_INSTRUCTION = """
‡∂î‡∂∂ ‡∑Å‡∑è‡∂ö ‡∂ª‡∑ù‡∂ú ‡∂¥‡∑í‡∑Ö‡∑í‡∂∂‡∂≥ ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç‡∂•‡∂∫‡∑ô‡∂ö‡∑í. ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ö‡∑è‡∂ª‡∑ä‡∂∫‡∂∫ ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.
‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì ‡∂á‡∂≠‡∑í ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫ ‡∑É‡∑Ñ ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂±‡∂∏ ‡∂∏‡∂≠ ‡∂¥‡∂Ø‡∂±‡∂∏‡∑ä‡∑Ä:
1.  ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∑ô‡∂±‡∑ô‡∂± ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂±‡∑ä‡∂± (‡∂ã‡∂Ø‡∑è: ‡∂ö‡∑ú‡∑Ö‡∑Ä‡∂Ω ‡∑É‡∑î‡∂Ø‡∑î ‡∂¥‡∑î‡∑É‡∑ä, ‡∂ö‡∑Ñ ‡∂¥‡∑ê‡∂Ω‡∑ä‡∂Ω‡∂∏‡∑ä).
2.  ‡∂ë‡∂∏ ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´‡∑Ä‡∂Ω‡∂ß ‡∂Ö‡∂Ø‡∑è‡∑Ö‡∑Ä, ‡∂ª‡∑ù‡∂ú‡∂∫ ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∑Ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂ã‡∂¥‡∂ö‡∑è‡∂ª‡∑ì ‡∑Ä‡∂± ‡∑É‡∂ª‡∂Ω ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± 2-3‡∂ö‡∑ä ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω‡∑ô‡∂±‡∑ä ‡∂Ö‡∑É‡∂±‡∑ä‡∂±. ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂ö‡∑è‡∂Ω‡∂ú‡∑î‡∂´‡∂∫ (‡∂ã‡∂Ø‡∑è: "‡∂¥‡∑É‡∑î‡∂ú‡∑í‡∂∫ ‡∂Ø‡∑í‡∂±‡∑Ä‡∂Ω ‡∂Ö‡∂∞‡∑í‡∂ö ‡∑Ä‡∂ª‡∑ä‡∑Ç‡∑è‡∂¥‡∂≠‡∂±‡∂∫‡∂ö‡∑ä ‡∂¥‡∑ê‡∑Ä‡∂≠‡∑î‡∂´‡∑è‡∂Ø?"), ‡∑Ñ‡∑í‡∂ª‡∑î ‡∂ë‡∑Ö‡∑í‡∂∫ (‡∂ã‡∂Ø‡∑è: "‡∑Å‡∑è‡∂ö‡∂∫ ‡∂Ø‡∑Ä‡∑É ‡∂¥‡∑î‡∂ª‡∑è ‡∑Ñ‡∑ú‡∂≥‡∑í‡∂±‡∑ä ‡∑Ñ‡∑í‡∂ª‡∑î ‡∂ë‡∑Ö‡∑í‡∂∫ ‡∂Ω‡∂∂‡∂± ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫‡∂ö‡∂Ø ‡∂á‡∂≠‡∑ä‡∂≠‡∑ö?"), ‡∑É‡∑Ñ ‡∂¢‡∂Ω‡∂∫ ‡∂Ø‡∑ê‡∂∏‡∑ì‡∂∏ (‡∂ã‡∂Ø‡∑è: "‡∂î‡∂∂ ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫‡∂∫‡∑ô‡∂±‡∑ä ‡∂ö‡∑ú‡∂¥‡∂∏‡∂´ ‡∑Ä‡∑è‡∂ª‡∂∫‡∂ö‡∑ä ‡∑Å‡∑è‡∂ö‡∂∫‡∂ß ‡∂¢‡∂Ω‡∂∫ ‡∂Ø‡∂∏‡∂±‡∑Ä‡∑è‡∂Ø?") ‡∑Ä‡∑ê‡∂±‡∑í ‡∂Ø‡∑ö ‡∂ú‡∑ê‡∂± ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.

‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª‡∂∫ ‡∂¥‡∑Ñ‡∂≠ ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í‡∂∫‡∂ß ‡∂Ö‡∂±‡∑î‡∑Ä *‡∂¥‡∂∏‡∂´‡∂ö‡∑ä* ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±:
[ANALYSIS]: <‡∂î‡∂∂ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠‡∑ä ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´ ‡∂¥‡∑í‡∑Ö‡∑í‡∂∂‡∂≥ ‡∂ö‡∑ô‡∂ß‡∑í ‡∑É‡∑è‡∂ª‡∑è‡∂Ç‡∑Å‡∂∫‡∂ö‡∑ä>
[QUESTIONS]: <‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ 1> | <‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ 2> | <‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫ 3>
"""

# ‡∂±‡∑Ä ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 2: ‡∂Ö‡∑Ä‡∑É‡∑è‡∂± ‡∑É‡∑Ñ ‡∑É‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫
FINAL_ANALYSIS_INSTRUCTION = """
‡∂î‡∂∂ ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∑ê‡∂¥‡∂∫‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑ä‡∂≠‡∑ö ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂∑‡∑è‡∑Ç‡∑è‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∂∏‡∂´‡∑í.
‡∂î‡∂∂ ‡∂ã‡∂Ø‡∑ä‡∂∑‡∑í‡∂Ø ‡∑Ä‡∑í‡∂Ø‡∑ä‚Äç‡∂∫‡∑è‡∑Ä ‡∑É‡∑Ñ ‡∑Å‡∑è‡∂ö ‡∂ª‡∑ù‡∂ú ‡∂¥‡∑í‡∑Ö‡∑í‡∂∂‡∂≥ ‡∑Ä‡∑í‡∑Å‡∑ö‡∑Ç‡∂•‡∂∫‡∑ô‡∂ö‡∑í.
‡∂î‡∂∂‡∂ß ‡∂Ø‡∑ê‡∂±‡∑ä ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´ ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫‡∂ö‡∑ä ‡∑É‡∑Ñ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä ‡∑É‡∂¥‡∂∫‡∂± ‡∂Ω‡∂Ø ‡∂¥‡∑è‡∂ª‡∑í‡∑É‡∂ª‡∑í‡∂ö ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î (‡∂ö‡∑è‡∂Ω‡∂ú‡∑î‡∂´‡∂∫, ‡∑Ñ‡∑í‡∂ª‡∑î ‡∂ë‡∑Ö‡∑í‡∂∫, ‡∂Ü‡∂Ø‡∑í‡∂∫) ‡∂Ω‡∑ê‡∂∂‡∑ì ‡∂á‡∂≠.
‡∂∏‡∑ô‡∂∏ ‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î (‡∂∏‡∑î‡∂Ω‡∑ä ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫, ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´, ‡∑É‡∑Ñ ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ú‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î) ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª, ‡∂¥‡∑Ñ‡∂≠ ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂Ø‡∑ë ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∑É‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑É‡∑Ñ ‡∂Ö‡∑Ä‡∑É‡∑è‡∂± ‡∑Ä‡∑è‡∂ª‡∑ä‡∂≠‡∑è‡∑Ä‡∂ö‡∑ä ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±:
1.  **‡∂±‡∑í‡∑Å‡∑ä‡∂†‡∑í‡∂≠ ‡∂ª‡∑ù‡∂ú ‡∑Ä‡∑í‡∂±‡∑í‡∑Å‡∑ä‡∂†‡∂∫:** ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂ª‡∑ù‡∂ú‡∂∫‡∑ö ‡∂±‡∂∏.
2.  **‡∑Ñ‡∑ö‡∂≠‡∑î:** ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ú‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø ‡∑É‡∑ê‡∂Ω‡∂ö‡∑í‡∂Ω‡∑ä‡∂Ω‡∂ß ‡∂ú‡∂±‡∑í‡∂∏‡∑í‡∂±‡∑ä ‡∂ª‡∑ù‡∂ú‡∂∫‡∂ß ‡∑Ñ‡∑ö‡∂≠‡∑î ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í ‡∂ö‡∂ª‡∂±‡∑ä‡∂±. (‡∂ã‡∂Ø‡∑è: "‡∂î‡∂∂ ‡∂¥‡∑ê‡∑Ä‡∑É‡∑ñ ‡∂¥‡∂ª‡∑í‡∂Ø‡∑í, ‡∂Ö‡∂∞‡∑í‡∂ö ‡∑Ä‡∂ª‡∑ä‡∑Ç‡∑è‡∂¥‡∂≠‡∂±‡∂∫ ‡∑É‡∑Ñ ‡∂Ö‡∂©‡∑î ‡∑Ñ‡∑í‡∂ª‡∑î ‡∂ë‡∑Ö‡∑í‡∂∫ ‡∂∏‡∑ô‡∂∏ ‡∂Ø‡∑í‡∂Ω‡∑ì‡∂ª ‡∂ª‡∑ù‡∂ú‡∂∫‡∂ß ‡∑Ñ‡∑ö‡∂≠‡∑î ‡∑Ä‡∂±‡∑ä‡∂±‡∂ß ‡∂á‡∂≠.")
3.  **‡∑Ä‡∑í‡∑É‡∂≥‡∑î‡∂∏‡∑ä ‡∑É‡∑Ñ ‡∂¥‡∑è‡∂Ω‡∂±‡∂∫:**
    *   **‡∂ö‡∑ä‡∑Ç‡∂´‡∑í‡∂ö ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª:** ‡∂∂‡∂Ω‡∂¥‡∑ë‡∂∏‡∂ß ‡∂Ω‡∂ö‡∑ä‡∑Ä‡∑ñ ‡∂ö‡∑ú‡∂ß‡∑É‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑Ä‡∑ê‡∂±‡∑í.
    *   **‡∂ö‡∑è‡∂∂‡∂±‡∑í‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂ö‡∑è‡∂ª:** ‡∂ú‡∑ô‡∂Ø‡∂ª‡∂Ø‡∑ì ‡∂¥‡∑í‡∑Ö‡∑í‡∂∫‡∑ô‡∂Ω ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ñ‡∑ù ‡∂∏‡∑í‡∂Ω‡∂Ø‡∑ì ‡∂ú‡∂≠ ‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂ö‡∑è‡∂∂‡∂±‡∑í‡∂ö ‡∑Ä‡∑í‡∑É‡∂≥‡∑î‡∂∏‡∑ä.
    *   **‡∂ª‡∑É‡∑è‡∂∫‡∂±‡∑í‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂ö‡∑è‡∂ª:** ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä, ‡∑É‡∑î‡∂Ø‡∑î‡∑É‡∑î ‡∂Ø‡∑í‡∂Ω‡∑ì‡∂ª ‡∂±‡∑è‡∑Å‡∂ö ‡∑Ñ‡∑ù ‡∂ö‡∑ò‡∂∏‡∑í‡∂±‡∑è‡∑Å‡∂ö ‡∂±‡∑í‡∂ª‡∑ä‡∂Ø‡∑ö‡∑Å ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    *   **‡∑Ä‡∑ê‡∑Ö‡∑ê‡∂ö‡∑ä‡∑Ä‡∑ì‡∂∏‡∑ö ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏:** ‡∂Ö‡∂±‡∑è‡∂ú‡∂≠‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂ª‡∑ù‡∂ú‡∂∫ ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂á‡∂≠‡∑í‡∑Ä‡∑ì‡∂∏ ‡∑Ä‡∑ê‡∑Ö‡∑ê‡∂ö‡∑ä‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É‡∑ä (‡∂ã‡∂Ø‡∑è: ‡∂¢‡∂Ω ‡∑É‡∂∏‡∑ä‡∂¥‡∑è‡∂Ø‡∂±‡∂∫ ‡∑Ä‡∑ê‡∂©‡∑í ‡∂Ø‡∑í‡∂∫‡∑î‡∂´‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏, ‡∑Ä‡∑è‡∂≠‡∑è‡∑Å‡∑ä‚Äç‡∂ª‡∂∫).
"""

# --- ‡∂Ü‡∂ö‡∑ò‡∂≠‡∑í ‡∑É‡∑ê‡∂ö‡∑É‡∑î‡∂∏ ---
identification_model = genai.GenerativeModel(model_name="gemini-1.5-flash-latest", system_instruction=IDENTIFICATION_INSTRUCTION)
preliminary_model = genai.GenerativeModel(model_name="gemini-1.5-pro-latest", system_instruction=PRELIMINARY_ANALYSIS_INSTRUCTION)
final_model = genai.GenerativeModel(model_name="gemini-1.5-pro-latest", system_instruction=FINAL_ANALYSIS_INSTRUCTION)

# --- ‡∑É‡∑ê‡∑É‡∑í ‡∂≠‡∂≠‡∑ä‡∂≠‡∑ä‡∑Ä‡∂∫ (Session State) ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
if "messages" not in st.session_state:
    st.session_state.messages = []
if "awaiting_confirmation" not in st.session_state:
    st.session_state.awaiting_confirmation = False
if "awaiting_environmental_info" not in st.session_state: # ‡∂±‡∑Ä state
    st.session_state.awaiting_environmental_info = False
if "plant_name" not in st.session_state:
    st.session_state.plant_name = ""
if "initial_analysis" not in st.session_state: # ‡∂±‡∑Ä state
    st.session_state.initial_analysis = ""
if "processed_file_id" not in st.session_state:
    st.session_state.processed_file_id = None
if "uploader_key" not in st.session_state:
    st.session_state.uploader_key = 0

# --- ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∑ì‡∂≠‡∑ä‡∑Ä‡∂∫‡∂±‡∑ä (Functions) ---
def reset_session():
    st.session_state.messages = []
    st.session_state.awaiting_confirmation = False
    st.session_state.awaiting_environmental_info = False
    st.session_state.plant_name = ""
    st.session_state.initial_analysis = ""
    st.session_state.processed_file_id = None
    st.session_state.uploader_key += 1
    st.rerun()

# --- UI ‡∑É‡∑Ñ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í ---
st.title("üå± Plant Disease Analyzer")
st.write("‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫‡∑ö ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂¥‡∑ê‡∂≠‡∑í ‡∂≠‡∑ì‡∂ª‡∑î‡∑Ä‡∑ô‡∂±‡∑ä (Side Bar) ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")

with st.sidebar:
    st.header("‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫")
    uploaded_file = st.file_uploader("‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±", type=["jpg", "jpeg", "png"], key=f"uploader_{st.session_state.uploader_key}")
    if st.button("‡∂±‡∑Ä ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫‡∂ö‡∑ä"):
        reset_session()

# --- ‡∑É‡∑ä‡∑Ä‡∂∫‡∂Ç‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫‡∑Ä ‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∑Ä‡∂Ω‡∑í‡∂∫ ---
if uploaded_file and uploaded_file.file_id != st.session_state.processed_file_id:
    st.session_state.messages = []
    st.session_state.processed_file_id = uploaded_file.file_id
    image = Image.open(uploaded_file)
    with st.spinner("‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂±‡∑í‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì..."):
        try:
            # ... (‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö ‡∑É‡∑Ñ ‡∑Ä‡∂Ω‡∂Ç‡∂ú‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö ‡∂ö‡∑ö‡∂≠‡∂∫ ‡∂¥‡∑ô‡∂ª ‡∂¥‡∂ª‡∑í‡∂Ø‡∑í‡∂∏)
            response = identification_model.generate_content(["‡∂∏‡∑ô‡∂∏ ‡∑Å‡∑è‡∂ö‡∂∫ ‡∂ö‡∑î‡∂∏‡∂ö‡∑ä‡∂Ø?", image])
            plant_name = response.text.strip()
            unrecognized_keywords = ["‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠", "‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß", "‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö", "‡∂Ö‡∂¥‡∑Ñ‡∑É‡∑î‡∂∫‡∑í", "‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í ‡∂±‡∑ê‡∂≠"]
            is_unrecognized = (not plant_name or any(keyword in plant_name for keyword in unrecognized_keywords) or len(plant_name.split()) > 3)
            if is_unrecognized:
                st.session_state.messages.append({"role": "assistant", "content": "‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂∏‡∑ô‡∂∏ ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∑ô‡∂±‡∑ä ‡∑Å‡∑è‡∂ö‡∂∫ ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í‡∑Ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∂©‡∑è‡∂≠‡∑ä ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."})
                st.rerun()
            else:
                st.session_state.plant_name = plant_name
                st.session_state.awaiting_confirmation = True
                st.session_state.messages.append({"role": "assistant", "content": f"‡∂∏‡∑ô‡∂∫ '{plant_name}' ‡∑Å‡∑è‡∂ö‡∂∫‡∂ö‡∑ä‡∂Ø? (‡∂î‡∑Ä‡∑ä / ‡∂±‡∑ê‡∂≠)"})
                st.rerun()
        except Exception as e:
            st.error(f"‡∑Å‡∑è‡∂ö‡∂∫ ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: {e}")
            time.sleep(3); reset_session()

# --- ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø ‡∂â‡∂≠‡∑í‡∑Ñ‡∑è‡∑É‡∂∫ ‡∑É‡∑Ñ ‡∂†‡∑ê‡∂ß‡∑ä ‡∂Ü‡∂Ø‡∑è‡∂±‡∂∫ ---
if st.session_state.processed_file_id and uploaded_file:
    with st.sidebar:
        st.image(uploaded_file, caption="‡∂î‡∂∂‡∑ö ‡∑Å‡∑è‡∂ö‡∂∫")

for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

if prompt := st.chat_input("‡∂î‡∂∂‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∂á‡∂≠‡∑î‡∑Ö‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±..."):
    if not st.session_state.processed_file_id:
        st.warning("‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑Ö‡∂∏‡∑î‡∑Ä ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."); st.stop()

    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"): st.markdown(prompt)

    # ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 1: ‡∑Å‡∑è‡∂ö‡∂∫ ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    if st.session_state.awaiting_confirmation:
        st.session_state.awaiting_confirmation = False
        if any(word in prompt.lower() for word in ["‡∂î‡∑Ä‡∑ä", "‡∂î‡∑Ä‡∑î", "ow", "yes"]):
            with st.spinner("‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä..."):
                try:
                    image = Image.open(uploaded_file)
                    response = preliminary_model.generate_content([f"‡∂∏‡∑ô‡∂∫ {st.session_state.plant_name} ‡∑Å‡∑è‡∂ö‡∂∫‡∂ö‡∑í.", image])
                    
                    # AI ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª‡∂∫ ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
                    analysis_match = re.search(r"\[ANALYSIS\]: (.*?)\n\[QUESTIONS\]:", response.text, re.DOTALL)
                    questions_match = re.search(r"\[QUESTIONS\]: (.*)", response.text, re.DOTALL)

                    if analysis_match and questions_match:
                        st.session_state.initial_analysis = analysis_match.group(1).strip()
                        questions = questions_match.group(1).strip().replace(" | ", "\n- ")
                        
                        follow_up_message = (f"‡∑Ñ‡∑ú‡∂≥‡∂∫‡∑í. ‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂±‡∑í‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∂´‡∂∫‡∂ß ‡∂Ö‡∂±‡∑î‡∑Ä, {st.session_state.initial_analysis.lower()}.\n\n"
                                           f"‡∂ª‡∑ù‡∂ú‡∂∫ ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∑Ä ‡∑Ñ‡∂≥‡∑î‡∂±‡∑è‡∂ú‡∑ê‡∂±‡∑ì‡∂∏ ‡∑É‡∂≥‡∑Ñ‡∑è, ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂∏‡∑ô‡∂∏ ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∑Ä‡∂Ω‡∂ß ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±:\n- {questions}")
                        
                        st.session_state.messages.append({"role": "assistant", "content": follow_up_message})
                        st.session_state.awaiting_environmental_info = True
                        st.rerun()
                    else:
                        st.error("‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.")
                except Exception as e:
                    st.error(f"‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä: {e}")
        else:
            st.session_state.messages.append({"role": "assistant", "content": "‡∂≠‡∑ö‡∂ª‡∑î‡∂∏‡∑ä ‡∂ú‡∂≠‡∑ä‡∂≠‡∑è. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫‡∂ö‡∑ä ‡∂ã‡∂©‡∑î‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±."})
            time.sleep(3); reset_session()

    # ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 2: ‡∂¥‡∑è‡∂ª‡∑í‡∑É‡∂ª‡∑í‡∂ö ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ì‡∂∏‡∑ô‡∂±‡∑ä ‡∂¥‡∑É‡∑î ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫
    elif st.session_state.awaiting_environmental_info:
        st.session_state.awaiting_environmental_info = False
        with st.spinner("‡∂î‡∂∂‡∂ú‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î ‡∂Ö‡∂±‡∑î‡∑Ä ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑è‡∂ª‡∑ä‡∂≠‡∑è‡∑Ä ‡∑É‡∂ö‡∑É‡∂∏‡∑í‡∂±‡∑ä..."):
            try:
                image = Image.open(uploaded_file)
                final_prompt = (f"‡∑Å‡∑è‡∂ö‡∂∫: {st.session_state.plant_name}.\n"
                                f"‡∂∏‡∑ñ‡∂Ω‡∑í‡∂ö ‡∂ª‡∑ù‡∂ú ‡∂Ω‡∂ö‡∑ä‡∑Ç‡∂´: {st.session_state.initial_analysis}.\n"
                                f"‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö‡∂∫‡∑è‡∂ú‡∑ö ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª‡∑î: {prompt}\n\n"
                                "‡∂â‡∑Ñ‡∂≠ ‡∑É‡∑í‡∂∫‡∂Ω‡∑î ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∑Ñ ‡∂°‡∑è‡∂∫‡∑è‡∂ª‡∑ñ‡∂¥‡∂∫ ‡∂∏‡∂≠ ‡∂¥‡∂Ø‡∂±‡∂∏‡∑ä‡∑Ä ‡∑É‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª‡∑è‡∂≠‡∑ä‡∂∏‡∂ö, ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑è‡∂ª‡∑ä‡∂≠‡∑è‡∑Ä ‡∑É‡∂¥‡∂∫‡∂±‡∑ä‡∂±.")
                
                response = final_model.generate_content([final_prompt, image], stream=True)
                with st.chat_message("assistant"):
                    placeholder = st.empty()
                    full_response = "".join([chunk.text for chunk in response])
                    placeholder.markdown(full_response)
                st.session_state.messages.append({"role": "assistant", "content": full_response})
            except Exception as e:
                st.error(f"‡∂Ö‡∑Ä‡∑É‡∑è‡∂± ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä: {e}")

    # ‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 3: ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫ ‡∂¥‡∑É‡∑î ‡∑Ä‡∑í‡∂¥‡∂ª‡∂∏‡∑ä ‡∑É‡∂Ç‡∑Ä‡∑è‡∂Ø‡∂∫
    elif 'chat_session' in st.session_state and st.session_state.chat_session: # Placeholder for future general chat
         st.write("‡∑Ä‡∑ê‡∂©‡∑í‡∂Ø‡∑î‡∂ª ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂ö‡∑è‡∂ª‡∑ì‡∂≠‡∑ä‡∑Ä‡∂∫ ‡∂¥‡∑É‡∑î‡∑Ä ‡∂ë‡∂ö‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß ‡∂±‡∑í‡∂∫‡∂∏‡∑í‡∂≠‡∂∫‡∑í.")

st.divider()
st.caption("‚ö†Ô∏è ‡∂∏‡∑ô‡∂∏ AI ‡∑Ä‡∑í‡∑Å‡∑ä‡∂Ω‡∑ö‡∑Ç‡∂´‡∂∫ ‡∑Ä‡∑ò‡∂≠‡∑ä‡∂≠‡∑ì‡∂∫ ‡∂ö‡∑ò‡∑Ç‡∑í‡∂ö‡∑è‡∂ª‡∑ä‡∂∏‡∑í‡∂ö ‡∂ã‡∂¥‡∂Ø‡∑ô‡∑É‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂Ü‡∂Ø‡∑ö‡∑Å‡∂ö‡∂∫‡∂ö‡∑ä ‡∑Ä‡∑ö.")